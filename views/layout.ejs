<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/reset.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/landing-page-style.css">
    <link rel="stylesheet" href="/styles/master-style.css">
    <link rel="stylesheet" href="/styles/music-style.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>
    <div class="user-forms">
        <h1>Login</h1>
        <form method="POST" action="/login">
            <input type="email" name="email">
            <input type="password" name="password">
            <input type="submit" value="submit">
        </form>

        <h1>Signup</h1>
        <form action="/subscribe" method="POST" id="payment-form">
            <span class="payment-errors"></span>
            <span>Full Name</span>
            <input type="text" name="name" data-stripe="name">
            <span>Address Line 1</span>
            <input type="text" name="address_line1" data-stripe="address_line1">
            <span>Address Line 2</span>
            <input type="text" name="address_line2" data-stripe="address_line2">
            <span>City</span>
            <input type="text" name="address_city" data-stripe="address_city">
            <span>State</span>
            <input type="text" name="address_state" data-stripe="address_state">
            <span>Zip</span>
            <input type="text" name="address_zip" data-stripe="address_zip">
            <span>Country</span>
            <input type="text" name="address_country" data-stripe="address_country">
            <span>Email</span>
            <input type="email" name="email" data-stripe="email">
            <span>Password</span>
            <input type="password" name="password">
            <div class="form-row">
            <label>
              <span>Card Number</span>
              <input type="text" size="20" data-stripe="number"/>
            </label>
            </div>

            <div class="form-row">
            <label>
              <span>CVC</span>
              <input type="text" size="4" data-stripe="cvc"/>
            </label>
            </div>

            <div class="form-row">
            <label>
              <span>Expiration (MM/YYYY)</span>
              <input type="text" size="2" data-stripe="exp-month"/>
            </label>
            <span> / </span>
            <input type="text" size="4" data-stripe="exp-year"/>
            </div>

            <button type="submit">Submit Payment</button>
        </form>
        <% if(req.user){ %>
            <p><%= req.user.email %></p>
        <% } %>
    </div>
    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
    
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/jquery-1.11.3.min.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/landing-page-title-flicker.js"></script>
    <!--SCRIPTS END-->

    <!-- Stripe Logic -->
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    <script type="text/javascript">
    window.onload = function() {
        // This identifies your website in the createToken call below
        Stripe.setPublishableKey('pk_test_0ni9O9IZpwmgDy3EhYUQ2drx');
        // ...
        function stripeResponseHandler(status, response) {
            var form = $('#payment-form');

            if (response.error) {
                // Show the errors on the form
                form.find('.payment-errors').text(response.error.message);
                form.find('button').prop('disabled', false);
                } else {
                // response contains id and card, which contains additional card details
                var token = response.id;
                console.log(token);
                // Insert the token into the form so it gets submitted to the server
                form.append($('<input type="hidden" name="stripeToken" />').val(token));
                // and submit
                form.get(0).submit();
            }
        };
        
        $('#payment-form').submit(function(event) {
            var form = $(this);
            
            // Disable the submit button to prevent repeated clicks
            form.find('button').prop('disabled', true);

            Stripe.card.createToken(form, stripeResponseHandler);

            // Prevent the form from submitting with the default action
            return false;
        });
    };
    </script>
  </body>
</html>
